#!/bin/bash
SCRIPT_PATH="$( cd "$(dirname "$0")" ; pwd -P )"

# Source external scripts.
source $SCRIPT_PATH/scripts/colors


## Functions ##

# Install a package using the given arguments if not already installed.
function install_pkg() {
  bin=$1
  list_cmd=$2
  install_cmd=$3
  name=$4
  args=$5
  $bin $list_cmd 2>/dev/null | grep -q $name
  if [ $? == 0 ]; then
    echo -e "$name ${blue}already installed with ${clear}$bin"
  else
    echo -e "${blue}Installing ${clear}$name${blue}...${clear}"
    $bin $install_cmd $args $name
  fi
}

# Add a Homebrew tap if not already added.
function install_tap() {
  tap=$1
  brew tap | grep -q $tap
  if [ $? == 0 ]; then
    echo -e "$tap ${blue}already tapped${clear}"
  else
    echo -e "${blue}Adding ${clear}$tap${blue} tap...${clear}"
    brew tap $tap
  fi
}


## Homebrew ##

# Install Homebrew
if ! type brew > /dev/null; then
  echo -e "\n${blue}Installing Homebrew...${clear}"
  if [[ $OSTYPE == darwin* ]]; then
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  else
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/linuxbrew/go/install)"
  fi
  echo -e "${green}✔${clear}"
fi

# Install taps
echo -e "\n${blue}Adding Homebrew taps...${clear}"
install_tap caskroom/fonts
install_tap caskroom/versions
install_tap homebrew/dupes # For PHP
install_tap homebrew/php
install_tap homebrew/versions # For PHP
install_tap neovim/neovim
echo -e "${green}✔${clear}"

# Install packages
echo -e "\n${blue}Installing Homebrew packages...${clear}"
brew update
if [[ $OSTYPE == darwin* ]]; then
  # Mac specific packages
  install_pkg brew ls install git
  install_pkg brew ls install openssl
  install_pkg brew ls install python
else
  # Linux specific packages
  install_pkg brew ls install git '--with-brewed-curl --with-brewed-openssl'
fi
install_pkg brew ls install composer
install_pkg brew ls install ctags
install_pkg brew ls install jq
install_pkg brew ls install neovim '--HEAD'
install_pkg brew ls install nvm
install_pkg brew ls install php70
install_pkg brew ls install php70-msgpack
install_pkg brew ls install python
install_pkg brew ls install python3
install_pkg brew ls install ruby
install_pkg brew ls install the_silver_searcher
install_pkg brew ls install tmux
install_pkg brew ls install wget
install_pkg brew ls install yarn
install_pkg brew ls install zplug
install_pkg brew ls install zsh
echo -e "${green}✔${clear}"

# Install casks
echo -e "\n${blue}Installing Homebrew casks...${clear}"
install_pkg 'brew cask' ls install font-monoid-nerd-font-mono
if [[ $OSTYPE == darwin* ]]; then
  # Mac spcific casks
  install_pkg 'brew cask' ls install atom
  install_pkg 'brew cask' ls install flycut
  install_pkg 'brew cask' ls install iterm2-nightly
  install_pkg 'brew cask' ls install sourcetree
  install_pkg 'brew cask' ls install spectacle
fi
echo -e "${green}✔${clear}"

# Cleanup
echo -e "\n${blue}Cleaning up Homebrew installation files...${clear}"
brew cleanup
brew cask cleanup
echo -e "${green}✔${clear}"


## Ruby ##

# Install gems
echo -e "\n${blue}Installing Ruby gems...${clear}"
install_pkg gem 'list --no-versions' install CoffeeTags
install_pkg gem 'list --no-versions' install neovim
echo -e "${green}✔${clear}"


## PIP ##

# Install packages
echo -e "\n${blue}Installing PIP packages...${clear}"
install_pkg pip 'list --format=legacy' install awscli
install_pkg pip 'list --format=legacy' install neovim
install_pkg pip 'list --format=legacy' install tmuxp
install_pkg pip3 'list --format=legacy' install neovim
echo -e "${green}✔${clear}"


## Tmux ##

# Install tmux plugins
echo -e "\n${blue}Installing Tmux plugins...${clear}"
$SCRIPT_PATH/libs/tpm/bin/clean_plugins
$SCRIPT_PATH/libs/tpm/bin/install_plugins
echo -e "${green}✔${clear}"


## Vim ##

# Install Vim-Plug
echo -e "\n${blue}Installing Vim-Plug...${clear}"
VIMPLUG_PATH=~/.config/nvim/autoload/plug.vim
if [ -e "$VIMPLUG_PATH" ]; then
  echo -e "${green}Already installed.${clear}"
else
  curl -fLo $VIMPLUG_PATH --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  echo -e "${green}✔${clear}"
fi

# Install plugins
echo -e "\n${blue}Starting NeoVim and installing plugins...${clear}"
nvim +PlugInstall +qall
echo -e "${green}✔${clear}"


## Git ##

# Add global .gitignore
echo -en "\n${blue}Setting global Git ignore file path...${clear} "
git config --global core.excludesfile ~/.gitignore
echo -e "${green}✔${clear}"

# Git submodules
echo -e "\n${blue}Installing Git submodules...${clear}"
git submodule init
git submodule update --remote --rebase
echo -e "${green}Done.${clear}"


## Other ##

# Use zsh as default shell
echo -e "\n${blue}Setting ZSH as default shell...${clear}"
ZSH_DIR=`which zsh`
DEFAULT_SHELL=`finger $LOGNAME | grep Shell | awk -F': ' '{print $3}'`
if [ $ZSH_DIR == $DEFAULT_SHELL ]; then
  echo -e "${green}Default shell is already ${clear}$DEFAULT_SHELL${green}.${clear}"
else
  # Make sure homebrew ZSH is in list of acceptable shells
  cat /etc/shells | grep -q $ZSH_DIR || echo $ZSH_DIR | sudo tee -a /etc/shells
  # Change the default shell
  chsh -s $ZSH_DIR
  echo -e "${green}✔${clear}"
fi

# Install iTerm CLI
if [[ $OSTYPE == darwin* ]]; then
  echo -e "\n${blue}Installing iTerm cli integration...${clear}"
  ITERM_CLI_PATH=~/.iterm2_shell_integration.zsh
  if [ -e "$ITERM_CLI_PATH" ]; then
    echo -e "${green}Already installed.${clear}"
  else
    curl -L iterm2.com/misc/install_shell_integration.sh | bash
    echo -e "${green}✔${clear}"
  fi
fi

# Create symlinks
source $SCRIPT_PATH/link

echo -e "${green}All done.${clear}\n"
