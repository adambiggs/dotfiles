#!/bin/bash
SCRIPT_PATH="$( cd "$(dirname "$0")" ; pwd -P )"

# Source external scripts.
source $SCRIPT_PATH/scripts/colors

# Update a `HEAD` brew package if there are remote changes available.
function update_brew_pkg_head() {
  pkg_name=$1
  echo -e "\n${blue}Updating ${clear}$pkg_name${blue} to latest HEAD...${clear}"
  repo_path=/Library/Caches/Homebrew/$pkg_name--git/
  local_sha=`cd $repo_path && git rev-parse @`
  remote_sha=`cd $repo_path && git fetch && git rev-parse @{u}`
  if [[ $local_sha == $remote_sha ]]; then
    echo -e "${green}Already up to date.${clear}"
  else
    brew reinstall --HEAD $pkg_name
    echo -e "\n${green}Done.${clear}"
  fi
}

# Homebrew
echo -e "\n${blue}Updating Homebrew packages...${clear}"
brew update
brew upgrade --all
brew cleanup
echo -e "${green}Done.${clear}"

# HEAD Homebrew packages
update_brew_pkg_head neovim
#update_brew_pkg_head tmux

# pip
echo -e "\n${blue}Updating certain pip packages...${clear}"
pip install -U pip neovim awscli tmuxp docker-compose
echo -e "${green}Done.${clear}"

# gem
echo -e "\n${blue}Updating ruby gems...${clear}"
gem update
echo -e "${green}Done.${clear}"

# Git submodules
echo -e "\n${blue}Updating git submodules...${clear}"
git submodule update --remote --rebase
echo -e "${green}Done.${clear}"

# zgen
echo -e "\n${blue}Updating zgen...${clear}"
source ~/.dotfiles/libs/zgen/zgen.zsh
zgen-selfupdate
echo -e "${green}Done.${clear}"

echo -e "\n${blue}Updating zgen plugins...${clear}"
zgen-update
#zgen-save # For some reason this breaks the zsh template...
echo -e "${green}Done.${clear}"

echo -e "\nðŸ’»  ${blue}You should start a new terminal session now.${clear}"

echo ""
